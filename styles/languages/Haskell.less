/*
#************************************************#
#   Northem Atom Dark Syntax - Language Haskell  #
#------------------------------------------------#
#                   Haskell.less                 #
#        http://arcticicestudio.com/Northem      #
#                                                #
#               Arctic Ice Studio                #
#               Copyright (c) 2015               #
#         development@arcticicestudio.com        #
#                                                #
#      Created : 2015-08-01 10:18 +0100 UTC      #
#      Modified: 2015-08-27 21:48 +0100 UTC      #
#************************************************#

[Description]
This file defines all language specific syntax highlighting classes for Haskell.

[Dependencies]
Syntax Highlighting based on the following packages:
  - "language-haskell@1.4.1" (https://atom.io/packages/language-haskell) by "atom-haskell" (https://atom.io/users/atom-haskell)

[License]
Copyright (C) 2015 Arctic Ice Studio <development@arcticicestudio.com>

Northem code is licensed under "GPL3" (http://www.gnu.org/licenses/gpl.txt).
Northem color palette itself is licensed under "CC BY-NC-SA 4.0" (http://creativecommons.org/licenses/by-nc-sa/4.0).
*/

.source.haskell {
  /*
   * ========
   * = META =
   * ========
   */
  .meta {
    &.preprocessor {
      color: @color-syntax-haskell-preprocessor;

      .keyword {
        &.other {
          color: @color-syntax-keyword;
        }
      }
    }
    &.declaration {
      &.exports {
        color: @color-syntax-symbol;
      }
    }
    &.type-signature {
      // TODO: Necessary to set parent color property?
      /* color: transparent; */

      .keyword {
        &.operator {
          color: @color-syntax-operator;
        }
      }
    }
    &.other {
      &.constructor-list {
        color: @color-syntax-variable;
      }
    }
  }

  /*
   * ===========
   * = COMMENT =
   * ===========
   */
  .comment {
    color: @color-syntax-comment;
    font-weight: normal;

    &.line {
      &.shebang {
        color: @color-syntax-haskell-preprocessor;
      }
    }
  }

  /*
   * ===========
   * = SUPPORT =
   * ===========
   */
  .support {
    &.other {
      &.module {
        color: @color-syntax-class;
        font-weight: bold;
      }
    }
    &.class {
      &.prelude {
        color: @color-syntax-class;
      }
    }
    &.function {
      &.prelude {
        color: @color-syntax-function;
      }
    }
    &.tag {
      color: @color-syntax-keyword;
    }
  }

  /*
   * ==========
   * = ENTITY =
   * ==========
   */
  .entity {
    &.name {
      &.type {
        color: @color-syntax-class;
      }
      &.function {
        color: @color-syntax-function;

        &.infix {
          color: @color-syntax-function;
        }
      }
      &.tag {
        color: @color-syntax-class;
      }
    }
  }

  /*
   * ===========
   * = KEYWORD =
   * ===========
   */
  .keyword {
    &.operator {
      color: @color-syntax-operator;

      &.assignment {
        color: @color-syntax-operator;
      }
      &.function {
        &.infix {
          color: @color-syntax-function;
        }
      }
    }
    &.other {
      color: @color-syntax-keyword;

      &.arrow {
        color: @color-syntax-operator;
      }
      &.double-colon {
        color: @color-syntax-operator;
      }
    }

    &.control {
      &.import {
        color: @color-syntax-haskell-preprocessor;
        font-weight: bold;
      }
    }
  }

  /*
   * ===========
   * = STORAGE =
   * ===========
   */
  .storage {
    &.type {
      &.data {
        color: @color-syntax-keyword;
      }
    }
  }

  /*
   * ===============
   * = PUNCTUATION =
   * ===============
   */
  .punctuation {
    &.separator {
      &.comma {
        color: @color-syntax-symbol;
      }
    }
    &.definition {
      &.entity {
        color: @color-syntax-symbol;
      }
      &.string {
        &.begin, &.end {
          color: @color-syntax-symbol;
        }
      }
    }
  }

  /*
   * ============
   * = CONSTANT =
   * ============
   */
  .constant {
    &.numeric {
      color: @color-syntax-number;
    }
  }

  /*
   * ==========
   * = STRING =
   * ==========
   */
  .string {
    &.quoted {
      &.single {
        color: @color-syntax-string;
      }
    }
  }
}
